{
  "rules": {
    "submissions": {
      ".read": true,
      ".write": true,
      "$paperId": {
        "$nic": {
          ".validate": "
            newData.hasChildren(['name', 'nic', 'district', 'class', 'medium', 'answers', 'timestamp']) &&
            newData.child('nic').val() == $nic &&
            newData.child('name').val().length > 0 &&
            newData.child('district').val().length > 0 &&
            newData.child('class').val().length > 0
          ",
          "answers": {
            "$questionId": {
              ".validate": "newData.isString() && newData.val().matches(/^[1-5]$/)"
            }
          },
          "timestamp": {
            ".validate": "newData.isNumber()"
          },
          "score": {
            ".validate": "newData.isNumber()"
          },
          "totalPossible": {
            ".validate": "newData.isNumber()"
          }
        }
      }
    },
    "admins": {
      ".read": "auth != null",
      ".write": "auth != null && root.child('admins').child(auth.uid).exists()"
    },
    "papers": {
      ".read": true,
      ".write": "auth != null && root.child('admins').child(auth.uid).exists()",
      "$paperId": {
        "questions": {
          ".indexOn": ["medium", "subject"]
        }
      }
    },
    "users": {
      "$nic": {
        ".read": "auth != null",
        ".write": "
          (!data.exists() && newData.exists()) ||
          (auth != null && newData.child('email').val() == auth.token.email) ||
          (auth != null && root.child('admins').child(auth.uid).exists())
        ",
        ".validate": "
          newData.hasChildren(['name', 'nic', 'email', 'district', 'phone']) &&
          newData.child('nic').val() == $nic
        "
      }
    },
    "userAuthMap": {
      "$nic": {
        ".read": "auth != null",
        ".write": "auth != null && root.child('admins').child(auth.uid).exists()",
        ".validate": "newData.isString()"
      }
    },
    "rankings": {
      ".read": true,
      "$year": {
        "$class": {
          "$paper": {
            ".indexOn": ["marks", "district"],
            ".write": "auth != null && root.child('admins').child(auth.uid).exists()",
            ".validate": "newData.hasChildren(['name', 'nic', 'score', 'percentage'])"
          }
        }
      }
    },
    "student_papers": {
      "$uid": {
        ".read": "auth != null && auth.uid == $uid",
        ".write": "auth != null && auth.uid == $uid",
        "$paperId": {
          ".validate": "
            newData.hasChildren(['downloadUrl', 'answerSheetUrl', 'availableUntil', 'timeLimit']) &&
            newData.child('availableUntil').val() > now &&
            newData.child('timeLimit').val() > 0
          "
        }
      }
    },
    "currentUser": {
      "$uid": {
        ".read": "auth != null && auth.uid == $uid",
        ".write": "auth != null && auth.uid == $uid"
      }
    }
  }
}